stateless box RS( out speed ) on func_rs
stateless box DS( side out dist ) on func_ds
stateless box B( in break_abs ) on func_b
box MB( in block, out break_cmd ) on func_mb
box DC(
    in abs,
    in cpa,
    side in dist,
    out dc
) on func_dc
box CPA(
    sync {
        decoupled side in dist,
        up in dc
    },
    out cpa,
    side in car_l_in,
    side out car_l_out,
    side in car_r_in,
    side out car_r_out
)on func_cpa
box ABS (
    in speed,
    in break_cmd,
    down in dc,
    out break_abs,
    out block,
    out abs
) on func_abs

net Car{
        down out car_next (car_l_out),
        up in car_next (car_r_in),
        down in car_prev (car_l_in),
        up out car_prev (car_r_out) }
{
    link car_l_in { CPA }
    link car_l_out { CPA }
    link car_r_in { CPA }
    link car_r_out { CPA }
    connect dist { DS, DC, CPA }

    DS | ( RS | B | MB ).ABS.DC.CPA
}

box CarS( out car_next, in car_prev ) on fcs
box CarE( in car_next, out car_prev ) on fce

CarS.Car.Car.Car.CarE
