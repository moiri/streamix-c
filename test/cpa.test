stateless box DS ( side out dist)
stateless box B (in break_abs)
box DC (
    in abs,
    in cpa,
    side in dist,
    out dc
)
box CPA (
    sync {
        decoupled side in dist,
        in dc
    },
    out cpa,
    side in car_l_in,
    side out car_l_out,
    side in car_r_in,
    side out car_r_out
)

wrapper Car { up in car_next (car_l_in), up out car_prev (car_l_out),
        down in car_prev (car_r_in), down out car_next (car_r_out) } {
    connect dist {ABS, DC, CPA}
    link car_l_in { CPA }
    link car_l_out { CPA }
    link car_r_in { CPA }
    link car_r_out { CPA }

    box MB (in block, out break_cmd)

    wrapper ABS { in dc, out abs, side out dist } {
        link dc { ABS }
        link abs { ABS }
        link dist { Sensors }
        box ABS (
            in speed,
            in break_cmd,
            side in dc,
            out break_abs,
            out block,
            side out abs
        )

        Sensors.ABS
    }

    wrapper Sensors { out speed, in block, out break_cmd, in break_abs, side out dist } {
        link speed { RS }
        link block { MB }
        link break_cmd { MB }
        link break_abs { B }
        link dist { DS }
        stateless box RS (out speed)

        RS|B|MB|DS
    }

    ABS.DC.CPA
}
box CarS( out car_next, in car_prev )
box CarE( in car_next, out car_prev )

CarS.Car.Car.Car.CarE
